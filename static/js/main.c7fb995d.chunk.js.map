{"version":3,"sources":["model/Question.js","NumberInput.js","QuestionForm.js","LatexQuestionForm.js","PracticeSummary.js","model/Evaluator.js","tools/random.js","tools/generator.js","StudentSession.js","model/Session.js","tools/analyze.js","GraphicalReport.js","tools/objects.js","Checkout.js","serviceWorker.js","index.js"],"names":["Question","firstNum","secondNum","operation","submittedAnswer","submissionTime","this","Date","expectedAnswer","result","getTime","getTimezoneOffset","toISOString","split","jsonObject","question","qsWithAnswer","qsWithResult","questionWithAnswers","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","prefix","NumberInput","React","forwardRef","ref","handleChange","callback","autoFocus","textInput","useRef","useEffect","setTimeout","current","focus","Fragment","TextField","label","onKeyDown","e","keyCode","length","handleTab","size","id","inputProps","InputProps","inputComponent","style","fontSize","QuestionForm","initialState","numberformat","firstInput","secondInput","submissionHandler","useState","setValues","questionHandler","event","parseFloat","mathFunction","now","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","ButtonGroup","color","aria-label","Button","borderStyle","onClick","LatexQuestionForm","text","number","startsWith","getMathRender","useStyles","makeStyles","table","minWidth","PracticeSummary","classes","rows","questions","incorrect","filter","q","TableContainer","component","Paper","Table","className","TableHead","TableRow","key","TableCell","align","TableBody","toFixed","map","row","scope","toLocaleTimeString","partition","require","groupBy","countBy","input","reduce","acc","curr","operations","a","b","junior_addition","junior_counting","junior_subtraction","junior_multiplication","addition","multiplication","subtraction","division","squareroot","Math","sqrt","cuberoot","cbrt","Evaluator","console","log","func","abs","forEach","groupByOperations","JSON","stringify","results","filteredWins","wins","concat","apply","filteredNeedPractice","needPractice","shuffle","difference","Random","min","max","ceil","floor","random","excludes","sequence","Array","from","keys","i","indexOf","generated","answer","parseInt","Generator","steps","range","shuffled","getNext","head","tail","getRandomIntInclusiveWithExceptions","inputs","firstOnes","secondOnes","firstTens","secondTens","ones","getRandomIntInclusive","theme","root","margin","width","StudentSession","exerciseId","localSession","setLocalSession","handleOperation","exercises","listItems","FormControlLabel","control","Radio","FormControl","FormLabel","RadioGroup","noValidate","autoComplete","Session","student","dateTime","functionName","toTimeString","sessionKey","datetimeString","extractSessions","localStorage","sessions","Object","session","createSession","sort","extractSessions2","allAttemptedQuestions","parse","flat","fromJson","sucessfulQuestions","evaluateQuestion","failedQuestions","uniqueDaysOfPractice","Set","s","dateInString","appreciation","_failedQuestions","_sucessfulQuestions","_allAttemptedQuestions","totalQuestionsPracticed","NumberOfSessions","failedByOperation","successByOperation","operationsBy","studentId","latest","earilest","getSessionsFor","date","getQuestionsFor","getSummaryFor","getSummaryForToday","today","getSummaryBetween","to","f","setHours","t","getReportByDate","dateResultPairs","entries","kv","datewiseReport","fromPairs","uniqueOperations","uniq","o","ops","has","subtract","days","dateOffset","fetchReportData","fromDate","toDate","timeSeriesData","splice","bindto","data","columns","type","x","groups","title","axis","toTimSeriesData","object","details","transform","sampleGraphData","GraphicalReport","graphData","state","setState","handleDateChange","dir","c3","generate","utils","DateFnsUtils","justify","disableToolbar","format","KeyboardButtonProps","Copyright","Link","href","getFullYear","appBar","position","layout","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","cubeGenerator","getStatefulShuffledGenerator","squareGenerator","level","mathOperations","accumulator","currentValue","Checkout","setQuestions","sid","setSession","newQuestions","questionWithResult","setItem","generatedNumbers","randomNumbers","getTwoNumbers","getCommonBase10sComplement","getNumberEndsWith5","getSameTens","getGeneratorFor","questionForm","CssBaseline","AppBar","Toolbar","noWrap","sessionTime","Card","CardContent","content","src","alt","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7fb995d.chunk.js","sourcesContent":["export default class Question {\n  constructor(firstNum, secondNum, operation, submittedAnswer, submissionTime) {\n    this.firstNum = firstNum;\n    this.secondNum = secondNum;\n    this.operation = operation;\n    this.submittedAnswer = submittedAnswer;\n    if (\n      typeof submissionTime === \"string\" ||\n      typeof submissionTime === \"number\"\n    ) {\n      this.submissionTime = new Date(submissionTime);\n    } else {\n      this.submissionTime = submissionTime;\n    }\n    this.expectedAnswer = null;\n    this.result = null;\n  }\n\n  get dateInString() {\n    if (this.submissionTime != null && this.submissionTime.getTime != null) {\n      return new Date(\n        this.submissionTime.getTime() - this.submissionTime.getTimezoneOffset() * 60000\n      ).toISOString().split(\"T\")[0];\n    }\n    return '1970-01-01'\n  }\n\n  static fromJson(jsonObject) {\n    return new Question(\n      jsonObject.firstNum,\n      jsonObject.secondNum,\n      jsonObject.operation,\n      jsonObject.submittedAnswer,\n      jsonObject.submissionTime\n    );\n  }\n\n  static questionWithAnswers(question, expectedAnswer) {\n    let qsWithAnswer = new Question(\n      question.firstNum,\n      question.secondNum,\n      question.operation,\n      question.submittedAnswer,\n      question.submissionTime\n    );\n    qsWithAnswer.expectedAnswer = expectedAnswer;\n    qsWithAnswer.result = null;\n    return qsWithAnswer;\n  }\n  static questionWithResult(question, expectedAnswer, result) {\n    let qsWithResult = this.questionWithAnswers(question, expectedAnswer);\n    qsWithResult.result = result;\n    return qsWithResult;\n  }\n}\n","import React, { useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\n\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst NumberInput = React.forwardRef((props, ref) => {\n\n  const { value, handleChange, callback, autoFocus } = props;\n  let textInput = useRef(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      textInput.current.focus();\n    }, 100);\n  })\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (value.length >= 1) {\n        callback(e)\n      }\n    }\n  }\n  \n  const submit = (e) => {\n    handleChange(e)\n  }\n\n  return (\n    <React.Fragment>\n      <TextField\n        label=\"\"\n        value={value}\n        autoFocus={autoFocus}\n        onKeyDown={(e) => handleTab(e, callback)}\n        inputRef={textInput}\n        onChange={submit}\n        name=\"numberformat\"\n        size=\"medium\"\n        id=\"formatted-numberformat-input\"\n        inputProps={{}}\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n          style: { fontSize: \"30px\" },\n        }}\n      />\n    </React.Fragment>\n  );\n})\n\nexport default NumberInput","import React,{useRef} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport Question from \"./model/Question\";\nimport NumberInput from \"./NumberInput\";\n\n\nconst QuestionForm = React.forwardRef((props, ref) => {\n\n  const initialState = { numberformat: \"\" }\n  const { firstInput, secondInput, operation, submissionHandler } = props;\n  const [values, setValues] = React.useState(initialState);\n  // const [inputRef, setInputFocus] = useFocus()\n\n  const onChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n\n  const handleGo = callback => event => {\n    let submittedAnswer = values.numberformat;\n    const question = new Question(\n      parseFloat(firstInput),\n      parseFloat(secondInput),\n      operation.mathFunction,\n      parseFloat(submittedAnswer),\n      Date.now()\n    );\n    setValues(initialState)\n    callback(question)\n    // setInputFocus()\n\n  };\n\n  const questionHandler = handleGo(submissionHandler);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        {operation.name}\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{firstInput}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"medium\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 25,\n              }}\n            >\n              <span>{operation.mathFunction}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{secondInput}</span>\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              borderStyle: \"none\",\n              fontSize: 30,\n            }}\n          >\n            =\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <NumberInput autoFocus={true} value={values.numberformat} callback={questionHandler} handleChange={onChange}/>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={questionHandler}\n              style={{\n                fontSize: 30,\n              }}\n            >\n              GO\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n})\n\nexport default QuestionForm;","import React,{useRef} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport Question from \"./model/Question\";\nimport NumberInput from \"./NumberInput\";\nimport 'katex/dist/katex.min.css';\nimport { InlineMath} from 'react-katex';\n\nfunction getMathRender(number, operation) {\n  if('square'.startsWith(operation)) {\n    return number + \"^2\";\n  } \n  if('cube'.startsWith(operation)) {\n    return number + \"^3\";\n  } \n}\n\nconst LatexQuestionForm = React.forwardRef((props, ref) => {\n\n  const initialState = { numberformat: \"\" }\n  const { firstInput, secondInput, operation, submissionHandler } = props;\n  const [values, setValues] = React.useState(initialState);\n\n  const onChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n\n  const handleGo = callback => event => {\n    let submittedAnswer = values.numberformat;\n    const question = new Question(\n      parseFloat(firstInput),\n      parseFloat(secondInput),\n      operation.mathFunction,\n      parseFloat(submittedAnswer),\n      Date.now()\n    );\n    setValues(initialState)\n    callback(question)\n\n  };\n\n  const questionHandler = handleGo(submissionHandler);\n  let text = getMathRender(firstInput, operation.id);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        Question\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={5}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              fontSize: 30,\n            }}\n          >\n            <InlineMath>{text}</InlineMath>\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              borderStyle: \"none\",\n              fontSize: 30,\n            }}\n          >\n            =\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <NumberInput\n              autoFocus={true}\n              value={values.numberformat}\n              // ref={inputRef}\n              callback={questionHandler}\n              handleChange={onChange}\n            />\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={questionHandler}\n              style={{\n                fontSize: 30,\n              }}\n            >\n              GO\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n})\n\nexport default LatexQuestionForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\n\nexport default function PracticeSummary(props) {\n  const classes = useStyles();\n  const rows = props.questions || [];\n  const incorrect = rows.filter(q => !q.result).length;\n\n  function caclulateSpeed() {\n    if(rows.length>0) {\n      let speedInMillis = (rows[0].submissionTime - rows[rows.length-1].submissionTime + 2)/rows.filter(q => q.result).length\n      return (speedInMillis/1000).toFixed(2);\n    }\n    return 9999999999;\n  }\n\n  return (\n    <React.Fragment>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow key='summaryHeader'>\n          <TableCell align=\"right\">Speed</TableCell>\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\">InCorrect</TableCell>\n            <TableCell align=\"right\">Correct</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n            <TableRow key='summary'>\n              <TableCell align=\"right\"><b>{caclulateSpeed()}</b></TableCell>\n              <TableCell align=\"right\">{rows.length}</TableCell>\n              <TableCell align=\"right\">{incorrect}</TableCell>\n              <TableCell align=\"right\">{rows.length - incorrect}</TableCell>\n            </TableRow>\n          \n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell align=\"right\">Result</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">Your Answer</TableCell>\n            <TableCell align=\"right\">Expected Answer</TableCell>\n            <TableCell align=\"right\">operation</TableCell>\n            <TableCell align=\"right\">Clue</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.submissionTime}>\n              <TableCell component=\"th\" scope=\"row\">\n                {new Date(row.submissionTime).toLocaleTimeString()}\n              </TableCell>\n              <TableCell align=\"right\">{row.result ? <CheckIcon /> : <CloseIcon />}</TableCell>              \n              <TableCell align=\"right\">{row.firstNum}</TableCell>\n              <TableCell align=\"right\">{row.secondNum}</TableCell>\n              <TableCell align=\"right\">{row.submittedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.expectedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.operation.operation}</TableCell>\n              <TableCell align=\"right\">{row.operation}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable arrow-parens */\nconst partition = require(\"lodash/fp/partition\");\nconst groupBy = require(\"lodash/fp/groupBy\");\n\nfunction countBy(input) {\n  const a = input.reduce((acc, curr) => {\n    if (typeof acc[curr] === 'undefined') {\n      acc[curr] = 1;\n    } else {\n      acc[curr] += 1;\n    }\n    return acc;\n  }, {});\n  return a;\n};\n\n\nconst operations = {\n  '+': (a, b) => a + b,\n  'x': (a, b) => a * b,\n  'X': (a, b) => a * b,\n  'square': (a, b) => a * a,\n  'cube': (a, b) => a * a * a,\n  '/': (a, b) => a / b,\n  '-': (a, b) => a - b,\n  junior_addition: (a, b) => a + b,\n  junior_counting: (a, b) => a,\n  junior_subtraction: (a, b) => a - b,\n  junior_multiplication: (a, b) => a * b,\n  addition: (a, b) => a + b,\n  multiplication: (a, b) => a * b,\n  subtraction: (a, b) => a - b,\n  division: (a, b) => a / b,\n  squareroot: (a) => Math.sqrt(a),\n  cuberoot: (a) => Math.cbrt(a),\n};\n\nexport default class Evaluator {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static answer(question) {\n    console.log(question);\n    let func = operations[question.operation];\n    if(func == null)\n      func = operations[question.operation.mathFunction];\n    return func(question.firstNum, question.secondNum);\n  }\n\n  static evaluateQuestion(question) {\n    let func = operations[question.operation];\n    if(func == null)\n      func = operations[question.operation.mathFunction];\n    return Math.abs(func(question.firstNum, question.secondNum) - question.submittedAnswer) < 0.1;\n  }\n\n  static analyze([...questions]) {\n    questions.forEach((q) => {\n      // eslint-disable-next-line no-param-reassign\n      q.result = operations[q.operation](q.firstNum, q.secondNum) === q.submittedAnswer;\n    });\n    let groupByOperations = groupBy(q => q.operation, questions);\n    console.log('1......' + JSON.stringify(groupByOperations));\n    let groupByOperationsNumbers =groupByOperations.map(results => partition(q => q.result, results));\n    return groupByOperationsNumbers;\n  }\n\n  static evaluate([...questions]) {\n    const filteredWins = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum === q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const wins = (typeof filteredWins !== 'undefined') ? [].concat.apply([], filteredWins) : [];\n\n    const filteredNeedPractice = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum !== q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const needPractice = (typeof filteredNeedPractice !== 'undefined') ? [].concat.apply([], filteredNeedPractice) : [];\n\n    const summary = {\n      wins: countBy(wins),\n      needPractice: countBy(needPractice),\n    };\n    return summary;\n  }\n}","//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\nconst difference = require('lodash/difference');\n\n/* exported distort */\nexport function distort(i) {\n  if (Math.random() > 0.5) {\n    return i + 1;\n  } else {\n    return i - 1;\n  }\n}\n\nexport default class Random {\n  /**\n   * Credit : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n   * @param {*} min\n   * @param {*} max\n   */\n  static getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; // The maximum is inclusive and the minimum is inclusive\n  }\n  \n\n  static getRandomIntInclusiveWithExceptions(min, max, excludes) {\n    // eslint-disable-next-line arrow-parens\n    const sequence = Array.from(Array(max - min).keys()).map(i => i + min).map(i => ''+i)\n        .filter( i => excludes.indexOf(i) < 0 ).filter( i => excludes.indexOf(+i) < 0 );\n    const generated = difference(sequence, excludes);\n    const answer = shuffle(Array.from(generated))[0];\n    return parseInt(answer, 10);\n  }\n}\n","import Random from \"./random\";\n//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\n\nexport default class Generator {\n\n  static getShuffledRange(min, max, excludes, steps) {\n    const range = max - min;\n    const generated = Array.from(Array(range).keys())\n    .filter(i => i+min)\n    .filter(i => excludes.indexOf(+i) < 0);\n    return shuffle(generated);\n  }\n\n  static getStatefulShuffledGenerator(min, max, excludes, steps) {\n    const range = max - min;\n    const generated = Array.from(Array(range).keys())\n    .filter(i => i+min)\n    .filter(i => excludes.indexOf(+i) < 0);\n    let shuffled =  shuffle(generated);\n    return {\n      getNext: function() {\n        let [head, ...tail] = shuffled;\n        shuffled = [...tail, head];\n        return head;\n      }\n    }\n  }\n\n  \n\n\n  static getTwoNumbers(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    return [firstNum, secondNum];\n  }\n\n  static isCommonBase(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 === 0) && (firstTens === secondTens);\n  }\n\n  static isSameTens(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 !== 0) && (firstTens === secondTens);\n  }\n\n\n  static isEndsIn5(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    return (firstOnes === secondOnes) && (firstOnes === 5);\n  }  \n\n  static getCommonBase10sComplement(min, max, excludes) {\n    let firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    let ones = firstNum % 10;\n    let base = firstNum - ones\n    let tensComplement = 10 - ones;\n    let secondNum = base + tensComplement;\n    return [firstNum, secondNum];\n  }\n\n  static getJunior5s(min, max, excludes) {\n    return [5, Random.getRandomIntInclusive(1, 9)];\n  }\n\n\n  static getSameTens(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const ones = Random.getRandomIntInclusive(1, 9);\n    const base = Math.floor(firstNum / 10);\n    const secondNum = (base * 10) + ones;\n    return [firstNum, secondNum];\n  }\n\n  \n\n  static getNumberEndsWith5(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, [firstNum, ...excludes]);\n    return [(firstNum * 10) + 5, (secondNum * 10) + 5];\n  }\n\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"20ch\",\n    },\n  },\n}));\n\nexport default function StudentSession(props) {\n  const classes = useStyles();\n\n  const [localSession, setLocalSession] = React.useState({\n    exerciseId: \"addition\",\n    name: \"\",\n  });\n\n  const handleOperation = (event) => {\n    console.log(`Selected exercise-id :: ${event.target.value}`);\n    setLocalSession({\n      ...localSession,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const { callback, exercises } = props;\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (localSession.name && localSession.name.length >= 2) {\n        callback(localSession);\n      }\n    }\n  };\n\n\n  const listItems = exercises.map(operation => <FormControlLabel key={operation.id} value={operation.id} control={<Radio />} label={operation.name}/>);\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Exercise</FormLabel>\n            <RadioGroup row aria-label=\"Exercises\" name=\"exerciseId\" value={localSession.exerciseId} onChange={handleOperation}>\n              {listItems}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-basic\" label=\"name\" variant=\"outlined\" size=\"medium\" name=\"name\"\n              value={localSession.name}\n              autoFocus\n              onKeyDown={(e) => handleTab(e, callback)}\n              onChange={handleOperation}\n            />\n            <Button\n              label=\"Start\" size=\"small\" variant=\"contained\" color=\"primary\"\n              onClick={(e) => callback(localSession)}\n              style={{\n                fontSize: 14,\n              }}\n            >\n              Start\n            </Button>\n            <Button\n              label=\"Start\" size=\"small\" variant=\"contained\" color=\"primary\"\n              onClick={(e) => callback(localSession)}\n              style={{\n                fontSize: 14,\n              }}\n            >\n              Analysis\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","export default class  Session {  \n\n  /**\n   * Sample session id - \"Practice_Kavin@2020-09-15T09:03:23.133Z\"\n   * @param {*} id \n   * @param {*} student \n   * @param {*} date \n   * @param {*} time \n   * @param {*} mathFunction \n   */\n  constructor(id, student, dateTime, mathFunction) {\n    this.id=id;\n    this.student = student;\n    this.dateTime = dateTime;\n    this.mathFunction = mathFunction;\n  }\n\n  set mathFunction(functionName) {\n    this.functionName = functionName;\n  }\n\n  get excerciseName() {\n    return this.mathFunction;\n  }\n\n  get mathFunction() {\n    return this.mathFunction;\n  }\n\n  get getTime() {\n    return this.dateTime.getTime();\n  }\n\n  get dateInString() {\n    return new Date(this.dateTime.getTime() - (this.dateTime.getTimezoneOffset() * 60000 )).toISOString().split(\"T\")[0];\n  }\n\n  get timeInString(){\n    return this.dateTime.toTimeString().split(' ')[0];\n  }\n\n\n  static createSession(sessionKey){\n    const name = sessionKey.split(\"@\")[0].split(\"_\")[1];\n    const datetimeString  = sessionKey.split(\"@\")[1].split(\"~\")[0];\n    const dateTime = new Date(datetimeString)\n    const mathFunction  = sessionKey.split(\"@\")[1].split(\"~\")[1];\n    return new Session(sessionKey, name, dateTime, mathFunction);\n  }  \n\n  \n}\n","import Evaluator from \"../model/Evaluator.js\";\nimport Session from \"../model/Session.js\";\nimport Question from \"../model/Question.js\";\nimport { entries, uniq, has, countBy, groupBy, fromPairs } from \"lodash\";\n\nexport function getResult(day, application, localStorage) {\n  const sessions = application.recentSessions.filter(\n    (i) => i.indexOf(day) != -1\n  );\n  const allAttemptedQuestions = sessions\n    .map((session) => JSON.parse(localStorage[session.id]))\n    .flat()\n    .map((q) => Question.fromJson(q));\n\n  const results = groupBy(allAttemptedQuestions, (q) => q.operation);\n  const summary = {};\n  summary[\"date\"] = day;\n  Object.keys(results).forEach((operations) => {\n    summary[operations] = {};\n    summary[operations].valid = results[operations].filter(\n      (q) => Evaluator.evaluateQuestion(q) === true\n    ).length;\n    summary[operations].inValid = results[operations].filter(\n      (q) => Evaluator.evaluateQuestion(q) !== true\n    ).length;\n  });\n\n  return summary;\n}\n\nexport function extractSessions2(name, localStorage) {\n  let sessionKeys = Object.keys(localStorage).filter(\n    (i) => i.indexOf(`Practice_${name}@`) != -1\n  );\n  const sessions = sessionKeys.map((session) => Session.createSession(session));\n  sessions.sort((a, b) => a.dateTime.getTime() - b.dateTime.getTime());\n  return sessions;\n}\n\nfunction findSessionFor(date, sessions) {\n  return sessions.filter((session) => session.dateInString === date);\n}\n\nexport default function extractSessions(name, localStorage) {\n  const sessions = extractSessions2(name, localStorage);\n\n  const allAttemptedQuestions = sessions\n    .map((session) => JSON.parse(localStorage[session.id]))\n    .flat()\n    .map((q) => Question.fromJson(q));\n  const sucessfulQuestions = allAttemptedQuestions.filter((q) =>\n    Evaluator.evaluateQuestion(q)\n  );\n  const failedQuestions = allAttemptedQuestions.filter(\n    (q) => !Evaluator.evaluateQuestion(q)\n  );\n  let failedNumbers = failedQuestions.map((q) => [q.firstNum, q.secondNum]);\n  let successfulNumbers = sucessfulQuestions.map((q) => [\n    q.firstNum,\n    q.secondNum,\n  ]);\n\n  const uniqueDaysOfPractice = new Set(sessions.map((s) => s.dateInString));\n\n  const appreciation = {};\n  appreciation._failedQuestions = failedQuestions;\n  appreciation._sucessfulQuestions = sucessfulQuestions;\n  appreciation._allAttemptedQuestions = allAttemptedQuestions;\n  appreciation.totalQuestionsPracticed = allAttemptedQuestions.length;\n  appreciation.uniqueDaysOfPractice = uniqueDaysOfPractice;\n  appreciation.NumberOfSessions = sessions.length;\n  appreciation.failedByOperation = countBy(failedQuestions, \"operation\");\n  appreciation.successByOperation = countBy(sucessfulQuestions, \"operation\");\n  appreciation.operationsBy = countBy(allAttemptedQuestions, \"operation\");\n  appreciation.sessions = sessions; // sessions.slice(0, recentDays);\n  appreciation.studentId = name;\n  appreciation.latest = sessions[sessions.length - 1] && sessions[sessions.length - 1].dateInString;\n  appreciation.earilest = sessions[0] && sessions[0].dateInString;\n  appreciation.getSessionsFor = function getSessionsFor(date) {\n    return sessions.filter((session) => session.dateInString === date);\n  };\n\n  appreciation.getQuestionsFor = (date) => {\n    return allAttemptedQuestions.filter((q) => q.dateInString === date);\n  };\n\n  appreciation.getSummaryFor = (date) => {\n    return countBy(\n      allAttemptedQuestions.filter((q) => q.dateInString === date),\n      \"operation\"\n    );\n  };\n\n  \n  appreciation.getSummaryForToday = () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    return countBy(\n      allAttemptedQuestions.filter((q) => q.dateInString === today),\n      \"operation\"\n    );\n  };\n  \n\n  appreciation.getSummaryBetween = (from, to) => {\n    const f = new Date(from);\n    f.setHours(0, 0, 0, 0);\n    const t = new Date(to);\n    t.setHours(23, 59, 59, 999);\n\n    return countBy(\n      allAttemptedQuestions.filter(\n        (q) =>\n          q.submissionTime.getTime() >= f.getTime() &&\n          q.submissionTime.getTime() <= t.getTime()\n      ),\n      \"operation\"\n    );\n  };\n\n  appreciation.getReportByDate = (from, to) => {\n    const f = new Date(from);\n    f.setHours(0, 0, 0, 0);\n    const t = new Date(to);\n    t.setHours(23, 59, 59, 999);\n\n    \n    \n    let questions = allAttemptedQuestions\n      .filter(\n        (q) =>\n          q.submissionTime.getTime() >= f.getTime() &&\n          q.submissionTime.getTime() <= t.getTime()\n      );\n    let dateResultPairs =  entries(groupBy(questions, (q) => q.dateInString)).map((kv) => [\n      kv[0],\n      countBy(kv[1], 'operation'),\n    ]);\n\n  let datewiseReport = fromPairs(dateResultPairs);\n\n  let uniqueOperations = uniq(\n    Object.values(datewiseReport)\n      .map((o) => Object.keys(o))\n      .flat()\n  );\n\n  //We populate attribute value for every date, \n  // if absent for a date, its value shoule be populated as zero to plot graph\n  Object.values(datewiseReport).forEach((o) => {\n    uniqueOperations\n      .filter((ops) => !has(o, ops))\n      .forEach((ops) => (o[ops] = 0));\n  });    \n    \n  return datewiseReport;\n\n  };\n\n\n\n\n\n  return appreciation;\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport \"c3/c3.css\";\nimport extractSessions from \"./tools/analyze.js\";\nimport transform from \"./tools/objects.js\";\nimport { entries } from \"lodash\";\nimport Grid from \"@material-ui/core/Grid\";\nimport c3 from \"c3\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nfunction toTimSeriesData(timeSeriesData) {\n  let exercises = timeSeriesData.map((e) => e[0]).splice(1);\n  return {\n    bindto: \"#chart\",\n    data: {\n      columns: timeSeriesData,\n      type: \"bar\",\n      x: \"date\",\n      groups: [exercises],\n    },\n    title: {\n      text: 'Your daily effort!'\n    },\n    axis: {\n      x: {\n        type: \"timeseries\",\n      },\n    },\n  };\n}\n\nfunction subtract(days) {\n  let dateOffset = 24 * 60 * 60 * 1000 * days; //5 days\n  let threeMonthsBack =  new Date(new Date().getTime() - dateOffset);\n  return threeMonthsBack.toISOString().split(\"T\")[0]; \n}\n\nfunction fetchReportData(name, fromDate, toDate) {\n  let report = extractSessions(name, localStorage);\n\n  let timeseries = report.getReportByDate(fromDate, toDate);\n  const reportData = toTimSeriesData(transform(timeseries));\n  return reportData;\n}\n\n\nlet sampleGraphData = {\n  data: {\n    columns: [\n      [\"data1\", 30],\n      [\"data2\", 50],\n    ],\n  },\n};\n\n\nexport default function GraphicalReport(props) {\n  const {name} = props;\n  \n  const initialState = {\n    graphData: sampleGraphData,\n    fromDate: subtract(60),\n    toDate: subtract(0),\n  };\n  const [state, setState] = React.useState(initialState);\n\n  const handleDateChange = (event, id) => {\n    debugger;\n    setState({\n      ...state,\n      [id]: event.toISOString().split(\"T\")[0],\n    });\n  }\n\n  useEffect(() => {\n    let data = fetchReportData(name, state.fromDate, state.toDate);\n    console.log(\"data fetch complete!\");\n    console.dir(data);\n        setState({\n          ...state,\n          graphData: data,\n        });\n  }, [state.fromDate, state.toDate]);\n\n   \n\n  useEffect(() => {    c3.generate(state.graphData);  }, [state]);   \n\n  return (\n    <Fragment>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container justify=\"space-around\">\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"fromDate\"\n            label=\"From\"\n            value={state.fromDate}\n            onChange={(date) => handleDateChange(date, \"fromDate\")}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"toDate\"\n            label=\"To Date\"\n            value={state.toDate}\n            onChange={(date) => handleDateChange(date, \"toDate\")}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <div id=\"chart\" />\n    </Fragment>\n  );\n}\n","import { entries, uniq } from \"lodash\";\n\n/**\n * Object can be flattened into 2-d array\n * @param {*} object \n */\nexport default function transform(object) {\n  let uniqueNestedKeys = uniq(\n    Object.values(object)\n      .map((o) => Object.keys(o))\n      .flat()\n  );\n\n  let details = uniqueNestedKeys.map((key) =>\n    [\n      key,\n      Object.values(object)\n        .map((o) => o[key])\n        .flat(),\n    ].flat()\n  );\n  return [[\"date\", ...Object.keys(object)], ...details];\n}\n","import React, { useEffect  } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport QuestionForm from './QuestionForm';\nimport LatexQuestionForm from './LatexQuestionForm';\nimport PracticeSummary from './PracticeSummary';\nimport Question from './model/Question'\nimport Evaluator from \"./model/Evaluator\";\nimport Generator from \"./tools/generator\";\nimport StudentSession from './StudentSession';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport GraphicalReport from './GraphicalReport';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        DailyPractice\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getGeneratorFor(exerciseId) {\n  console.log('getGeneratorFor' + exerciseId);\n  const min = mathOperations[exerciseId].min , max = mathOperations[exerciseId].max, excludes = mathOperations[exerciseId].excludes;\n\n  const randomNumbers = Generator.getTwoNumbers(min, max, excludes);\n\n  if ('onesSumTo10'.startsWith(exerciseId)) {\n    return Generator.getCommonBase10sComplement(min, max, excludes)\n  } else if ('getNumberEndsWith5'.startsWith(exerciseId)) {\n    return Generator.getNumberEndsWith5(min, max, excludes)\n  } else if ('sameTens'.startsWith(exerciseId)) {\n    return  Generator.getSameTens(min, max, excludes)\n  } else if ('subtraction'.startsWith(exerciseId)) {    \n    randomNumbers.sort((a, b) => b - a);\n    return randomNumbers;\n  }  else if ('division'.startsWith(exerciseId)) {    \n    randomNumbers.sort((a, b) => b - a);\n    return [randomNumbers[1]*randomNumbers[0], randomNumbers[0]];\n  }  else if ('square'.startsWith(exerciseId) ) {\n    return [squareGenerator.getNext(), 2]\n  }  else if ('cube'.startsWith(exerciseId) ) {\n    return [cubeGenerator.getNext(), 3]\n  }\n\n  return randomNumbers;        \n}\n\nlet cubeGenerator = Generator.getStatefulShuffledGenerator(2,25, [5,10]);\n\nlet squareGenerator = Generator.getStatefulShuffledGenerator(2,50, [5,10]);\n\nconst exercises = [\n  { id:'addition', level: 10, name: 'Addition (+)', mathFunction: '+',    min: 20,    max: 40, excludes: [5,10] },\n  { id:'subtraction', level: 20, name: 'Subtraction (-)', mathFunction: '-',    min: 2,    max: 40, excludes: [5,10] },\n  { id:'multiplicationJr', level: 30, name: 'Basics Multiplication (x)', mathFunction: 'X',    min: 2,    max: 11, excludes: [5,10] },\n  { id:'multiplication', level: 40, name: 'Multiplication (x)', mathFunction: 'X',    min: 9,    max: 21, excludes: [5,10] },\n  { id:'onesSumTo10', level: 50, name: 'One`s Sum To 10', mathFunction: 'X',    min: 20,    max: 40, excludes: [5,10,15,11,20]  },\n  { id:'getNumberEndsWith5', level: 60, name: 'Number 5`s (x)', mathFunction: 'X',    min: 2,    max: 9, excludes: [0] },\n  { id:'sameTens', level: 70, name: 'SameTens', mathFunction: 'X',    min: 11,    max: 100, excludes: [5,10,15,11,20] },\n  { id:'division', level: 80, name: 'Division &divide;', mathFunction: '/',    min: 2,    max: 20, excludes: [5,10] },\n  { id:'square', level: 90, name: 'Square (x^2)', mathFunction: 'square',    min: 2,    max: 50, excludes: [5,10]},\n  { id:'cube', level: 100, name: 'Cube (x^3)', mathFunction: 'cube',    min: 2,    max: 25, excludes: [5,10]},\n].sort((a, b) => a.level - b.level);\n\nconst mathOperations = exercises.reduce( (accumulator, currentValue) => { accumulator[currentValue.id]=currentValue; return accumulator; } , {})\n\n\nexport default function Checkout() {\n  const initialSession = { name: \"\", sid: \"\", exerciseId: \"onesSumTo10\" }\n\n  const classes = useStyles();\n  const [questions, setQuestions] = React.useState([]);\n  const [session, setSession] = React.useState(initialSession);\n  \n  const submissionHandler = (question) => {\n    let questionWithResult = Question.questionWithResult(question, Evaluator.answer(question), Evaluator.evaluateQuestion(question))\n    const newQuestions = [questionWithResult , ...questions]\n    setQuestions(newQuestions);\n  };   \n\n  const onNameChange = (event) => {\n    setSession({\n      ...session,\n      [event.target.name]: event.target.value,\n      sid: ''\n    });\n  };\n\n  useEffect(() => {\n    if(questions && questions.length>4 && session.sid.length > 2) {\n      localStorage.setItem(session.sid, JSON.stringify(questions));\n    }\n  }, [questions]);\n  \n  const sessionHandler = (localSession) => {\n    let sessionTime = (new Date()).toISOString();\n    const sid = `Practice_${localSession.name}@${sessionTime}~${localSession.exerciseId}`;\n    console.dir(`Local session from session handler - ${localSession}`)\n    setSession({\n      ...localSession,\n      sid\n    });\n    setQuestions([])\n  }\n\n  const generatedNumbers = getGeneratorFor(session.exerciseId);\n\n  let questionForm = null;\n  \n  if( session.exerciseId === 'square' || session.exerciseId === 'cube' ) {\n    questionForm = (\n      <LatexQuestionForm\n        submissionHandler={submissionHandler}\n        firstInput={generatedNumbers[0]}\n        secondInput={generatedNumbers[1]}\n        operation={mathOperations[session.exerciseId]}\n      />\n    );\n  } else {\n    questionForm = <QuestionForm submissionHandler={submissionHandler} firstInput={generatedNumbers[0]} secondInput={generatedNumbers[1]} operation={mathOperations[session.exerciseId]} />\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        color=\"transparent\"\n        className={classes.appBar}\n      >\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Daily Practice\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          {session.sid.length === 0 && (\n            <StudentSession exercises={exercises} callback={sessionHandler} />\n          )}\n\n          {session.sid.length > 10 && (\n            <React.Fragment>\n              <Card className={classes.root}>\n                <div className={classes.details}>\n                  <CardContent className={classes.content}>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12} sm={4}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                          {session.name}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} sm={4}>\n                        <img\n                          src=\"/icon/1.png\"\n                          alt=\"recipe thumbnail\"\n                          height=\"50\"\n                          width=\"50\"\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={4}>\n                        <Button\n                          label=\"End\"\n                          size=\"small\"\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={onNameChange}\n                          style={{ fontSize: 25 }}\n                        >\n                          End\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </div>\n              </Card>\n              {questionForm}\n              <PracticeSummary questions={questions} />\n              <GraphicalReport name={session.name} />\n            </React.Fragment>\n          )}\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Checkout from './Checkout'\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Checkout />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}